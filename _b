
	scene.fog = new THREE.Fog( 0xffffff, 1, 5000 );
   // scene.fog = new THREE.Fog( 0x000000, 0, 500 );
	scene.fog.color.setHSL( 0.6, 0, 1 );

    var ambient = new THREE.AmbientLight( 0xa0a0a0 );
    scene.add( ambient );

    // LIGHTS

    if(true){
    light = new THREE.SpotLight( 0xffffff );
    light.position.set( 20, 30, 30 );
    light.target.position.set( 0, 0, 0 );
    light.castShadow = true;

    light.shadowCameraNear = 10;
    light.shadowCameraFar = 70; //camera.far;
    light.shadowCameraFov = 50;

    light.shadowMapBias = 0.1;
    light.shadowMapDarkness = 0.6;
    light.shadowMapWidth = 2*1024;
    light.shadowMapHeight = 2*512;

    scene.add( light );
    }

    var hemiLight = new THREE.HemisphereLight( 0xffffff, 0xffffff, 0.6 );
    hemiLight.color.setHSL( 0.6, 1, 0.6 );
    hemiLight.groundColor.setHSL( 0.095, 1, 0.75 );
    hemiLight.position.set( 0, 500, 0 );
    scene.add( hemiLight );

	// SKYDOME
    var vertexShader = document.getElementById( 'vertexShader' ).textContent;
    var fragmentShader = document.getElementById( 'fragmentShader' ).textContent;
    var uniforms = {
        topColor: 	 { type: "c", value: new THREE.Color( 0x0077ff ) },
        bottomColor: { type: "c", value: new THREE.Color( 0xffffff ) },
        offset:		 { type: "f", value: 33 },
        exponent:	 { type: "f", value: 0.6 }
    }
    uniforms.topColor.value.copy( hemiLight.color );

    scene.fog.color.copy( uniforms.bottomColor.value );

    var skyGeo = new THREE.SphereGeometry( 4000, 32, 15 );
    var skyMat = new THREE.ShaderMaterial( { vertexShader: vertexShader, fragmentShader: fragmentShader, uniforms: uniforms, side: THREE.BackSide } );

    var sky = new THREE.Mesh( skyGeo, skyMat );
    scene.add( sky );
